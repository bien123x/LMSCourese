// <auto-generated />
using LMSCourse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMSCourse.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250910103037_AddUserPermission2")]
    partial class AddUserPermission2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMSCourse.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            PermissionId = 1,
                            PermissionName = "UsersView"
                        },
                        new
                        {
                            PermissionId = 2,
                            PermissionName = "UsersCreate"
                        },
                        new
                        {
                            PermissionId = 3,
                            PermissionName = "UsersEdit"
                        },
                        new
                        {
                            PermissionId = 4,
                            PermissionName = "UsersDelete"
                        },
                        new
                        {
                            PermissionId = 5,
                            PermissionName = "RolesView"
                        },
                        new
                        {
                            PermissionId = 6,
                            PermissionName = "RolesCreate"
                        },
                        new
                        {
                            PermissionId = 7,
                            PermissionName = "RolesEdit"
                        },
                        new
                        {
                            PermissionId = 8,
                            PermissionName = "RolesDelete"
                        },
                        new
                        {
                            PermissionId = 9,
                            PermissionName = "CoursesView"
                        },
                        new
                        {
                            PermissionId = 10,
                            PermissionName = "CoursesCreate"
                        },
                        new
                        {
                            PermissionId = 11,
                            PermissionName = "CoursesEdit"
                        },
                        new
                        {
                            PermissionId = 12,
                            PermissionName = "CoursesDelete"
                        },
                        new
                        {
                            PermissionId = 13,
                            PermissionName = "LessonsView"
                        },
                        new
                        {
                            PermissionId = 14,
                            PermissionName = "LessonsCreate"
                        },
                        new
                        {
                            PermissionId = 15,
                            PermissionName = "LessonsEdit"
                        },
                        new
                        {
                            PermissionId = 16,
                            PermissionName = "LessonsDelete"
                        },
                        new
                        {
                            PermissionId = 17,
                            PermissionName = "EnrollmentsView"
                        },
                        new
                        {
                            PermissionId = 18,
                            PermissionName = "EnrollmentsManage"
                        },
                        new
                        {
                            PermissionId = 19,
                            PermissionName = "PaymentsView"
                        },
                        new
                        {
                            PermissionId = 20,
                            PermissionName = "PaymentsManage"
                        },
                        new
                        {
                            PermissionId = 21,
                            PermissionName = "LogsView"
                        },
                        new
                        {
                            PermissionId = 22,
                            PermissionName = "SystemView"
                        },
                        new
                        {
                            PermissionId = 23,
                            PermissionName = "SystemManage"
                        });
                });

            modelBuilder.Entity("LMSCourse.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Teacher"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Student"
                        });
                });

            modelBuilder.Entity("LMSCourse.Models.RolePermission", b =>
                {
                    b.Property<int>("RolePermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolePermissionId"));

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RolePermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RolePermissionId = 1,
                            PermissionId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 2,
                            PermissionId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 3,
                            PermissionId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 4,
                            PermissionId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 5,
                            PermissionId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 6,
                            PermissionId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 7,
                            PermissionId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 8,
                            PermissionId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 9,
                            PermissionId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 10,
                            PermissionId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 11,
                            PermissionId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 12,
                            PermissionId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 13,
                            PermissionId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 14,
                            PermissionId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 15,
                            PermissionId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 16,
                            PermissionId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 17,
                            PermissionId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 18,
                            PermissionId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 19,
                            PermissionId = 19,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 20,
                            PermissionId = 20,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 21,
                            PermissionId = 21,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 22,
                            PermissionId = 22,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 23,
                            PermissionId = 23,
                            RoleId = 1
                        },
                        new
                        {
                            RolePermissionId = 100,
                            PermissionId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            RolePermissionId = 101,
                            PermissionId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            RolePermissionId = 102,
                            PermissionId = 11,
                            RoleId = 2
                        },
                        new
                        {
                            RolePermissionId = 103,
                            PermissionId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            RolePermissionId = 104,
                            PermissionId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            RolePermissionId = 105,
                            PermissionId = 14,
                            RoleId = 2
                        },
                        new
                        {
                            RolePermissionId = 106,
                            PermissionId = 15,
                            RoleId = 2
                        },
                        new
                        {
                            RolePermissionId = 107,
                            PermissionId = 16,
                            RoleId = 2
                        },
                        new
                        {
                            RolePermissionId = 108,
                            PermissionId = 17,
                            RoleId = 2
                        },
                        new
                        {
                            RolePermissionId = 109,
                            PermissionId = 18,
                            RoleId = 2
                        },
                        new
                        {
                            RolePermissionId = 200,
                            PermissionId = 9,
                            RoleId = 3
                        },
                        new
                        {
                            RolePermissionId = 201,
                            PermissionId = 13,
                            RoleId = 3
                        },
                        new
                        {
                            RolePermissionId = 202,
                            PermissionId = 17,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("LMSCourse.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@gmail.com",
                            IsActive = true,
                            Name = "",
                            PasswordHash = "AQAAAAIAAYagAAAAEMzknX2MYGHJeLe0/W3+YGSoeIkEBeYukkowMdWyLZYK6ylmGx1KcNXX9iYYdgWcqw==",
                            PhoneNumber = "01234456",
                            Surname = "",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("LMSCourse.Models.UserPermission", b =>
                {
                    b.Property<int>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPermissionId"));

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserPermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions");
                });

            modelBuilder.Entity("LMSCourse.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("LMSCourse.Models.RolePermission", b =>
                {
                    b.HasOne("LMSCourse.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSCourse.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("LMSCourse.Models.UserPermission", b =>
                {
                    b.HasOne("LMSCourse.Models.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSCourse.Models.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSCourse.Models.UserRole", b =>
                {
                    b.HasOne("LMSCourse.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSCourse.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSCourse.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("LMSCourse.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("LMSCourse.Models.User", b =>
                {
                    b.Navigation("UserPermissions");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
